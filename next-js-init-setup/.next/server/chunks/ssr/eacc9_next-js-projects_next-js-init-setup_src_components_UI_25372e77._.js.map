{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/sanjeev/my%20files/new-product-application/next-js-projects/next-js-init-setup/src/components/UI/DarkModeToggle/DarkModeToggle.tsx"],"sourcesContent":["\"use client\";\nimport React, { useEffect, useState } from \"react\";\n\nconst DarkModeToggle = () => {\n  const [isDark, setIsDark] = useState(false);\n\n  useEffect(() => {\n    // Initialize theme from saved preference or system preference\n    const savedTheme = localStorage.getItem(\"theme\");\n    if (\n      savedTheme === \"dark\" ||\n      (!savedTheme && window.matchMedia(\"(prefers-color-scheme: dark)\").matches)\n    ) {\n      setIsDark(true);\n      document.documentElement.classList.add(\"dark\");\n    }\n  }, []);\n\n  const toggleTheme = () => {\n    if (isDark) {\n      document.documentElement.classList.remove(\"dark\");\n      localStorage.setItem(\"theme\", \"light\");\n    } else {\n      document.documentElement.classList.add(\"dark\");\n      localStorage.setItem(\"theme\", \"dark\");\n    }\n    setIsDark(!isDark);\n  };\n\n  return (\n    <button\n      onClick={toggleTheme}\n      className=\"bg-color-background text-color-foreground px-4 py-2 rounded\"\n      aria-label=\"Toggle dark mode\"\n    >\n      {isDark ? \"‚òÄÔ∏è Light Mode\" : \"üåô Dark Mode\"}\n    </button>\n  );\n};\n\nexport default DarkModeToggle;\n"],"names":[],"mappings":";;;;;AACA;AADA;;;AAGA,MAAM,iBAAiB;IACrB,MAAM,CAAC,QAAQ,UAAU,GAAG,IAAA,ubAAQ,EAAC;IAErC,IAAA,wbAAS,EAAC;QACR,8DAA8D;QAC9D,MAAM,aAAa,aAAa,OAAO,CAAC;QACxC,IACE,eAAe,UACd,CAAC,cAAc,OAAO,UAAU,CAAC,gCAAgC,OAAO,EACzE;YACA,UAAU;YACV,SAAS,eAAe,CAAC,SAAS,CAAC,GAAG,CAAC;QACzC;IACF,GAAG,EAAE;IAEL,MAAM,cAAc;QAClB,IAAI,QAAQ;YACV,SAAS,eAAe,CAAC,SAAS,CAAC,MAAM,CAAC;YAC1C,aAAa,OAAO,CAAC,SAAS;QAChC,OAAO;YACL,SAAS,eAAe,CAAC,SAAS,CAAC,GAAG,CAAC;YACvC,aAAa,OAAO,CAAC,SAAS;QAChC;QACA,UAAU,CAAC;IACb;IAEA,qBACE,odAAC;QACC,SAAS;QACT,WAAU;QACV,cAAW;kBAEV,SAAS,kBAAkB;;;;;;AAGlC;uCAEe","debugId":null}},
    {"offset": {"line": 49, "column": 0}, "map": {"version":3,"sources":["file:///Users/sanjeev/my%20files/new-product-application/next-js-projects/next-js-init-setup/src/components/UI/LocaleSwitcher.tsx"],"sourcesContent":["'use client';\nimport { useRouter, usePathname } from 'next/navigation';\n\nexport default function LocaleSwitcher() {\n  const router = useRouter();\n  const pathname = usePathname();\n\n  const handleChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const newLocale = event.target.value;\n    // Replace locale in path (assuming /[locale]/... structure)\n    const newPath = pathname.replace(/^\\/[a-z]{2}/, `/${newLocale}`);\n    router.push(newPath);\n  };\n\n  return (\n    <select onChange={handleChange} defaultValue={pathname.split('/')[1]}>\n      <option value=\"en\">English</option>\n      <option value=\"es\">Espa√±ol</option>\n      <option value=\"fr\">Fran√ßais</option>\n    </select>\n  );\n}\n"],"names":[],"mappings":";;;;;AACA;AADA;;;AAGe,SAAS;IACtB,MAAM,SAAS,IAAA,qXAAS;IACxB,MAAM,WAAW,IAAA,uXAAW;IAE5B,MAAM,eAAe,CAAC;QACpB,MAAM,YAAY,MAAM,MAAM,CAAC,KAAK;QACpC,4DAA4D;QAC5D,MAAM,UAAU,SAAS,OAAO,CAAC,eAAe,CAAC,CAAC,EAAE,WAAW;QAC/D,OAAO,IAAI,CAAC;IACd;IAEA,qBACE,odAAC;QAAO,UAAU;QAAc,cAAc,SAAS,KAAK,CAAC,IAAI,CAAC,EAAE;;0BAClE,odAAC;gBAAO,OAAM;0BAAK;;;;;;0BACnB,odAAC;gBAAO,OAAM;0BAAK;;;;;;0BACnB,odAAC;gBAAO,OAAM;0BAAK;;;;;;;;;;;;AAGzB","debugId":null}}]
}